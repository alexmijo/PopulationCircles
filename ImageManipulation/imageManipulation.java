import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.imageio.ImageIO;
import static java.util.Map.entry;
import java.util.Map;
import java.lang.Math;


/**
 * Based off of https://stackoverflow.com/questions/2658663
 */
class ImageManipulation {

    private static String percent;
    private static int circleNum;

    // May be too big to compile. I split it into thirds and did each third separately. Should put
    //  this in a text file instead in the future (TODO).
    private static Map<String, String> countries = Map.ofEntries(
        entry("0.1", "Bangladesh"),
        entry("0.2", "China"),
        entry("0.3", "China"),
        entry("0.4", "India"),
        entry("0.5", "China"),
        entry("0.6", "China"),
        entry("0.7", "China"),
        entry("0.8", "China"),
        entry("0.9", "China"),
        entry("1.0", "Bangladesh"),
        entry("1.1", "Bangladesh"),
        entry("1.2", "Bangladesh"),
        entry("1.3", "Bangladesh"),
        entry("1.4", "Bangladesh"),
        entry("1.5", "Bangladesh"),
        entry("1.6", "Bangladesh"),
        entry("1.7", "Bangladesh"),
        entry("1.8", "Bangladesh"),
        entry("1.9", "Bangladesh"),
        entry("2.0", "Bangladesh"),
        entry("2.1", "Bangladesh"),
        entry("2.2", "Bangladesh"),
        entry("2.3", "Bangladesh"),
        entry("2.4", "Bangladesh"),
        entry("2.5", "Bangladesh"),
        entry("2.6", "Bangladesh"),
        entry("2.7", "Bangladesh"),
        entry("2.8", "Bangladesh"),
        entry("2.9", "Bangladesh"),
        entry("3.0", "Bangladesh"),
        entry("3.1", "Bangladesh"),
        entry("3.2", "Bangladesh"),
        entry("3.3", "India"),
        entry("3.4", "Bangladesh"),
        entry("3.5", "India"),
        entry("3.6", "India"),
        entry("3.7", "India"),
        entry("3.8", "India"),
        entry("3.9", "India"),
        entry("4.0", "India"),
        entry("4.1", "India"),
        entry("4.2", "India"),
        entry("4.3", "India"),
        entry("4.4", "India"),
        entry("4.5", "India"),
        entry("4.6", "India"),
        entry("4.7", "India"),
        entry("4.8", "Bangladesh"),
        entry("4.9", "India"),
        entry("5.0", "India"),
        entry("5.1", "India"),
        entry("5.2", "India"),
        entry("5.3", "India"),
        entry("5.4", "India"),
        entry("5.5", "India"),
        entry("5.6", "India"),
        entry("5.7", "India"),
        entry("5.8", "India"),
        entry("5.9", "India"),
        entry("6.0", "India"),
        entry("6.1", "India"),
        entry("6.2", "India"),
        entry("6.3", "India"),
        entry("6.4", "India"),
        entry("6.5", "India"),
        entry("6.6", "India"),
        entry("6.7", "India"),
        entry("6.8", "India"),
        entry("6.9", "India"),
        entry("7.0", "India"),
        entry("7.1", "India"),
        entry("7.2", "India"),
        entry("7.3", "India"),
        entry("7.4", "India"),
        entry("7.5", "India"),
        entry("7.6", "India"),
        entry("7.7", "India"),
        entry("7.8", "India"),
        entry("7.9", "India"),
        entry("8.0", "India"),
        entry("8.1", "India"),
        entry("8.2", "India"),
        entry("8.3", "India"),
        entry("8.4", "India"),
        entry("8.5", "India"),
        entry("8.6", "India"),
        entry("8.7", "India"),
        entry("8.8", "India"),
        entry("8.9", "India"),
        entry("9.0", "India"),
        entry("9.1", "India"),
        entry("9.2", "India"),
        entry("9.3", "India"),
        entry("9.4", "India"),
        entry("9.5", "India"),
        entry("9.6", "India"),
        entry("9.7", "India"),
        entry("9.8", "India"),
        entry("9.9", "India"),
        entry("10.0", "India"),
        entry("10.1", "India"),
        entry("10.2", "India"),
        entry("10.3", "India"),
        entry("10.4", "India"),
        entry("10.5", "India"),
        entry("10.6", "India"),
        entry("10.7", "India"),
        entry("10.8", "India"),
        entry("10.9", "India"),
        entry("11.0", "India"),
        entry("11.1", "India"),
        entry("11.2", "India"),
        entry("11.3", "India"),
        entry("11.4", "India"),
        entry("11.5", "India"),
        entry("11.6", "India"),
        entry("11.7", "India"),
        entry("11.8", "India"),
        entry("11.9", "India"),
        entry("12.0", "India"),
        entry("12.1", "India"),
        entry("12.2", "India"),
        entry("12.3", "India"),
        entry("12.4", "India"),
        entry("12.5", "India"),
        entry("12.6", "India"),
        entry("12.7", "India"),
        entry("12.8", "India"),
        entry("12.9", "India"),
        entry("13.0", "India"),
        entry("13.1", "India"),
        entry("13.2", "India"),
        entry("13.3", "India"),
        entry("13.4", "India"),
        entry("13.5", "India"),
        entry("13.6", "India"),
        entry("13.7", "India"),
        entry("13.8", "India"),
        entry("13.9", "India"),
        entry("14.0", "India"),
        entry("14.1", "India"),
        entry("14.2", "India"),
        entry("14.3", "India"),
        entry("14.4", "India"),
        entry("14.5", "India"),
        entry("14.6", "India"),
        entry("14.7", "India"),
        entry("14.8", "India"),
        entry("14.9", "India"),
        entry("15.0", "India"),
        entry("15.1", "India"),
        entry("15.2", "India"),
        entry("15.3", "India"),
        entry("15.4", "India"),
        entry("15.5", "India"),
        entry("15.6", "India"),
        entry("15.7", "India"),
        entry("15.8", "India"),
        entry("15.9", "India"),
        entry("16.0", "India"),
        entry("16.1", "India"),
        entry("16.2", "India"),
        entry("16.3", "India"),
        entry("16.4", "India"),
        entry("16.5", "India"),
        entry("16.6", "India"),
        entry("16.7", "India"),
        entry("16.8", "India"),
        entry("16.9", "India"),
        entry("17.0", "India"),
        entry("17.1", "India"),
        entry("17.2", "India"),
        entry("17.3", "India"),
        entry("17.4", "India"),
        entry("17.5", "India"),
        entry("17.6", "India"),
        entry("17.7", "India"),
        entry("17.8", "India"),
        entry("17.9", "India"),
        entry("18.0", "India"),
        entry("18.1", "India"),
        entry("18.2", "India"),
        entry("18.3", "India"),
        entry("18.4", "India"),
        entry("18.5", "India"),
        entry("18.6", "India"),
        entry("18.7", "India"),
        entry("18.8", "India"),
        entry("18.9", "India"),
        entry("19.0", "India"),
        entry("19.1", "India"),
        entry("19.2", "India"),
        entry("19.3", "India"),
        entry("19.4", "India"),
        entry("19.5", "India"),
        entry("19.6", "India"),
        entry("19.7", "India"),
        entry("19.8", "India"),
        entry("19.9", "India"),
        entry("20.0", "India"),
        entry("20.1", "India"),
        entry("20.2", "India"),
        entry("20.3", "India"),
        entry("20.4", "India"),
        entry("20.5", "India"),
        entry("20.6", "India"),
        entry("20.7", "India"),
        entry("20.8", "India"),
        entry("20.9", "India"),
        entry("21.0", "India"),
        entry("21.1", "India"),
        entry("21.2", "India"),
        entry("21.3", "India"),
        entry("21.4", "India"),
        entry("21.5", "India"),
        entry("21.6", "India"),
        entry("21.7", "India"),
        entry("21.8", "India"),
        entry("21.9", "India"),
        entry("22.0", "India"),
        entry("22.1", "India"),
        entry("22.2", "India"),
        entry("22.3", "India"),
        entry("22.4", "India"),
        entry("22.5", "India"),
        entry("22.6", "India"),
        entry("22.7", "India"),
        entry("22.8", "India"),
        entry("22.9", "India"),
        entry("23.0", "India"),
        entry("23.1", "India"),
        entry("23.2", "India"),
        entry("23.3", "India"),
        entry("23.4", "India"),
        entry("23.5", "India"),
        entry("23.6", "India"),
        entry("23.7", "India"),
        entry("23.8", "India"),
        entry("23.9", "India"),
        entry("24.0", "India"),
        entry("24.1", "India"),
        entry("24.2", "India"),
        entry("24.3", "India"),
        entry("24.4", "India"),
        entry("24.5", "India"),
        entry("24.6", "India"),
        entry("24.7", "China"),
        entry("24.8", "China"),
        entry("24.9", "China"),
        entry("25.0", "China"),
        entry("25.1", "China"),
        entry("25.2", "China"),
        entry("25.3", "China"),
        entry("25.4", "China"),
        entry("25.5", "China"),
        entry("25.6", "China"),
        entry("25.7", "China"),
        entry("25.8", "China"),
        entry("25.9", "China"),
        entry("26.0", "China"),
        entry("26.1", "China"),
        entry("26.2", "China"),
        entry("26.3", "China"),
        entry("26.4", "China"),
        entry("26.5", "China"),
        entry("26.6", "China"),
        entry("26.7", "China"),
        entry("26.8", "China"),
        entry("26.9", "China"),
        entry("27.0", "China"),
        entry("27.1", "China"),
        entry("27.2", "China"),
        entry("27.3", "China"),
        entry("27.4", "China"),
        entry("27.5", "China"),
        entry("27.6", "China"),
        entry("27.7", "China"),
        entry("27.8", "China"),
        entry("27.9", "China"),
        entry("28.0", "China"),
        entry("28.1", "China"),
        entry("28.2", "China"),
        entry("28.3", "China"),
        entry("28.4", "China"),
        entry("28.5", "China"),
        entry("28.6", "China"),
        entry("28.7", "China"),
        entry("28.8", "China"),
        entry("28.9", "China"),
        entry("29.0", "China"),
        entry("29.1", "China"),
        entry("29.2", "China"),
        entry("29.3", "China"),
        entry("29.4", "China"),
        entry("29.5", "China"),
        entry("29.6", "China"),
        entry("29.7", "China"),
        entry("29.8", "China"),
        entry("29.9", "China"),
        entry("30.0", "China"),
        entry("30.1", "China"),
        entry("30.2", "China"),
        entry("30.3", "China"),
        entry("30.4", "China"),
        entry("30.5", "China"),
        entry("30.6", "China"),
        entry("30.7", "China"),
        entry("30.8", "China"),
        entry("30.9", "China"),
        entry("31.0", "China"),
        entry("31.1", "China"),
        entry("31.2", "China"),
        entry("31.3", "China"),
        entry("31.4", "China"),
        entry("31.5", "China"),
        entry("31.6", "China"),
        entry("31.7", "China"),
        entry("31.8", "China"),
        entry("31.9", "China"),
        entry("32.0", "China"),
        entry("32.1", "China"),
        entry("32.2", "China"),
        entry("32.3", "China"),
        entry("32.4", "China"),
        entry("32.5", "China"),
        entry("32.6", "China"),
        entry("32.7", "China"),
        entry("32.8", "China"),
        entry("32.9", "China"),
        entry("33.0", "China"),
        entry("33.1", "China"),
        entry("33.2", "China"),
        entry("33.3", "China"),
        entry("33.4", "China"),
        entry("33.5", "China"),
        entry("33.6", "China"),
        entry("33.7", "China"),
        entry("33.8", "China"),
        entry("33.9", "China"),
        entry("34.0", "China"),
        entry("34.1", "China"),
        entry("34.2", "China"),
        entry("34.3", "China"),
        entry("34.4", "China"),
        entry("34.5", "China"),
        entry("34.6", "China"),
        entry("34.7", "China"),
        entry("34.8", "India"),
        entry("34.9", "India"),
        entry("35.0", "India"),
        entry("35.1", "India"),
        entry("35.2", "India"),
        entry("35.3", "India"),
        entry("35.4", "China"),
        entry("35.5", "China"),
        entry("35.6", "China"),
        entry("35.7", "China"),
        entry("35.8", "China"),
        entry("35.9", "China"),
        entry("36.0", "China"),
        entry("36.1", "China"),
        entry("36.2", "China"),
        entry("36.3", "India"),
        entry("36.4", "India"),
        entry("36.5", "India"),
        entry("36.6", "India"),
        entry("36.7", "India"),
        entry("36.8", "India"),
        entry("36.9", "India"),
        entry("37.0", "India"),
        entry("37.1", "India"),
        entry("37.2", "India"),
        entry("37.3", "India"),
        entry("37.4", "India"),
        entry("37.5", "India"),
        entry("37.6", "India"),
        entry("37.7", "India"),
        entry("37.8", "India"),
        entry("37.9", "India"),
        entry("38.0", "India"),
        entry("38.1", "India"),
        entry("38.2", "India"),
        entry("38.3", "India"),
        entry("38.4", "India"),
        entry("38.5", "India"),
        entry("38.6", "India"),
        entry("38.7", "India"),
        entry("38.8", "India"),
        entry("38.9", "India"),
        entry("39.0", "India"),
        entry("39.1", "India"),
        entry("39.2", "India"),
        entry("39.3", "India"),
        entry("39.4", "India"),
        entry("39.5", "India"),
        entry("39.6", "India"),
        entry("39.7", "India"),
        entry("39.8", "India"),
        entry("39.9", "Myanmar"),
        entry("40.0", "India"),
        entry("40.1", "India"),
        entry("40.2", "India"),
        entry("40.3", "India"),
        entry("40.4", "India"),
        entry("40.5", "India"),
        entry("40.6", "India"),
        entry("40.7", "India"),
        entry("40.8", "Myanmar"),
        entry("40.9", "India"),
        entry("41.0", "Myanmar"),
        entry("41.1", "Myanmar"),
        entry("41.2", "Myanmar"),
        entry("41.3", "Myanmar"),
        entry("41.4", "Myanmar"),
        entry("41.5", "Myanmar"),
        entry("41.6", "Myanmar"),
        entry("41.7", "Myanmar"),
        entry("41.8", "Myanmar"),
        entry("41.9", "Myanmar"),
        entry("42.0", "Myanmar"),
        entry("42.1", "Myanmar"),
        entry("42.2", "Myanmar"),
        entry("42.3", "Myanmar"),
        entry("42.4", "Myanmar"),
        entry("42.5", "Myanmar"),
        entry("42.6", "Myanmar"),
        entry("42.7", "Myanmar"),
        entry("42.8", "Myanmar"),
        entry("42.9", "India"),
        entry("43.0", "India"),
        entry("43.1", "Myanmar"),
        entry("43.2", "India"),
        entry("43.3", "India"),
        entry("43.4", "India"),
        entry("43.5", "India"),
        entry("43.6", "India"),
        entry("43.7", "India"),
        entry("43.8", "India"),
        entry("43.9", "India"),
        entry("44.0", "India"),
        entry("44.1", "India"),
        entry("44.2", "India"),
        entry("44.3", "India"),
        entry("44.4", "India"),
        entry("44.5", "India"),
        entry("44.6", "India"),
        entry("44.7", "India"),
        entry("44.8", "India"),
        entry("44.9", "India"),
        entry("45.0", "India"),
        entry("45.1", "India"),
        entry("45.2", "Myanmar"),
        entry("45.3", "Myanmar"),
        entry("45.4", "Myanmar"),
        entry("45.5", "Myanmar"),
        entry("45.6", "Myanmar"),
        entry("45.7", "Myanmar"),
        entry("45.8", "Myanmar"),
        entry("45.9", "Myanmar"),
        entry("46.0", "India"),
        entry("46.1", "India"),
        entry("46.2", "China"),
        entry("46.3", "China"),
        entry("46.4", "Myanmar"),
        entry("46.5", "Myanmar"),
        entry("46.6", "Myanmar"),
        entry("46.7", "Myanmar"),
        entry("46.8", "China"),
        entry("46.9", "India"),
        entry("47.0", "India"),
        entry("47.1", "India"),
        entry("47.2", "Myanmar"),
        entry("47.3", "India"),
        entry("47.4", "India"),
        entry("47.5", "India"),
        entry("47.6", "Myanmar"),
        entry("47.7", "Myanmar"),
        entry("47.8", "China"),
        entry("47.9", "China"),
        entry("48.0", "China"),
        entry("48.1", "China"),
        entry("48.2", "China"),
        entry("48.3", "China"),
        entry("48.4", "China"),
        entry("48.5", "China"),
        entry("48.6", "China"),
        entry("48.7", "China"),
        entry("48.8", "China"),
        entry("48.9", "China"),
        entry("49.0", "China"),
        entry("49.1", "China"),
        entry("49.2", "China"),
        entry("49.3", "China"),
        entry("49.4", "China"),
        entry("49.5", "China"),
        entry("49.6", "China"),
        entry("49.7", "China"),
        entry("49.8", "China"),
        entry("49.9", "China"),
        entry("50.0", "China"),
        entry("50.1", "China"),
        entry("50.2", "China"),
        entry("50.3", "Myanmar"),
        entry("50.4", "Myanmar"),
        entry("50.5", "Myanmar"),
        entry("50.6", "Myanmar"),
        entry("50.7", "Myanmar"),
        entry("50.8", "Myanmar"),
        entry("50.9", "Myanmar"),
        entry("51.0", "China"),
        entry("51.1", "China"),
        entry("51.2", "China"),
        entry("51.3", "China"),
        entry("51.4", "Vietnam"),
        entry("51.5", "China"),
        entry("51.6", "China"),
        entry("51.7", "China"),
        entry("51.8", "China"),
        entry("51.9", "China"),
        entry("52.0", "China"),
        entry("52.1", "China"),
        entry("52.2", "China"),
        entry("52.3", "China"),
        entry("52.4", "China"),
        entry("52.5", "China"),
        entry("52.6", "China"),
        entry("52.7", "China"),
        entry("52.8", "China"),
        entry("52.9", "China"),
        entry("53.0", "China"),
        entry("53.1", "China"),
        entry("53.2", "China"),
        entry("53.3", "China"),
        entry("53.4", "China"),
        entry("53.5", "China"),
        entry("53.6", "China"),
        entry("53.7", "China"),
        entry("53.8", "China"),
        entry("53.9", "China"),
        entry("54.0", "China"),
        entry("54.1", "China"),
        entry("54.2", "China"),
        entry("54.3", "China"),
        entry("54.4", "China"),
        entry("54.5", "China"),
        entry("54.6", "China"),
        entry("54.7", "China"),
        entry("54.8", "Myanmar"),
        entry("54.9", "Myanmar"),
        entry("55.0", "India"),
        entry("55.1", "India"),
        entry("55.2", "China"),
        entry("55.3", "China"),
        entry("55.4", "China"),
        entry("55.5", "China"),
        entry("55.6", "China"),
        entry("55.7", "China"),
        entry("55.8", "China"),
        entry("55.9", "China"),
        entry("56.0", "China"),
        entry("56.1", "China"),
        entry("56.2", "China"),
        entry("56.3", "China"),
        entry("56.4", "China"),
        entry("56.5", "China"),
        entry("56.6", "China"),
        entry("56.7", "China"),
        entry("56.8", "China"),
        entry("56.9", "Kyrgyzstan"),
        entry("57.0", "Kyrgyzstan"),
        entry("57.1", "Kyrgyzstan"),
        entry("57.2", "Kyrgyzstan"),
        entry("57.3", "Kyrgyzstan"),
        entry("57.4", "Kyrgyzstan"),
        entry("57.5", "Kyrgyzstan"),
        entry("57.6", "Kyrgyzstan"),
        entry("57.7", "China"),
        entry("57.8", "China"),
        entry("57.9", "China"),
        entry("58.0", "China"),
        entry("58.1", "China"),
        entry("58.2", "Tajikistan"),
        entry("58.3", "Tajikistan"),
        entry("58.4", "Afghanistan"),
        entry("58.5", "Pakistan"),
        entry("58.6", "Pakistan"),
        entry("58.7", "Pakistan"),
        entry("58.8", "Pakistan"),
        entry("58.9", "Pakistan"),
        entry("59.0", "Afghanistan"),
        entry("59.1", "Afghanistan"),
        entry("59.2", "Afghanistan"),
        entry("59.3", "Pakistan"),
        entry("59.4", "Pakistan"),
        entry("59.5", "Afghanistan"),
        entry("59.6", "Afghanistan"),
        entry("59.7", "Afghanistan"),
        entry("59.8", "Kazakhstan"),
        entry("59.9", "Kazakhstan"),
        entry("60.0", "Tajikistan"),
        entry("60.1", "Tajikistan"),
        entry("60.2", "Tajikistan"),
        entry("60.3", "Tajikistan"),
        entry("60.4", "Kyrgyzstan"),
        entry("60.5", "Kyrgyzstan"),
        entry("60.6", "Kyrgyzstan"),
        entry("60.7", "Kyrgyzstan"),
        entry("60.8", "Tajikistan"),
        entry("60.9", "Tajikistan"),
        entry("61.0", "Tajikistan"),
        entry("61.1", "Kyrgyzstan"),
        entry("61.2", "Kyrgyzstan"),
        entry("61.3", "Kyrgyzstan"),
        entry("61.4", "Kyrgyzstan"),
        entry("61.5", "Tajikistan"),
        entry("61.6", "Kyrgyzstan"),
        entry("61.7", "Kyrgyzstan"),
        entry("61.8", "Uzbekistan"),
        entry("61.9", "Tajikistan"),
        entry("62.0", "Tajikistan"),
        entry("62.1", "Tajikistan"),
        entry("62.2", "Tajikistan"),
        entry("62.3", "Tajikistan"),
        entry("62.4", "Tajikistan"),
        entry("62.5", "Tajikistan"),
        entry("62.6", "Uzbekistan"),
        entry("62.7", "Tajikistan"),
        entry("62.8", "Tajikistan"),
        entry("62.9", "Uzbekistan"),
        entry("63.0", "Uzbekistan"),
        entry("63.1", "Uzbekistan"),
        entry("63.2", "Kazakhstan"),
        entry("63.3", "Kazakhstan"),
        entry("63.4", "Kazakhstan"),
        entry("63.5", "Kazakhstan"),
        entry("63.6", "Kazakhstan"),
        entry("63.7", "Kazakhstan"),
        entry("63.8", "Kazakhstan"),
        entry("63.9", "Kazakhstan"),
        entry("64.0", "Kazakhstan"),
        entry("64.1", "Kazakhstan"),
        entry("64.2", "Kazakhstan"),
        entry("64.3", "Kazakhstan"),
        entry("64.4", "Kazakhstan"),
        entry("64.5", "Kazakhstan"),
        entry("64.6", "Kazakhstan"),
        entry("64.7", "Kazakhstan"),
        entry("64.8", "Kazakhstan"),
        entry("64.9", "Kazakhstan"),
        entry("65.0", "Uzbekistan"),
        entry("65.1", "Uzbekistan"),
        entry("65.2", "Uzbekistan"),
        entry("65.3", "Uzbekistan"),
        entry("65.4", "Uzbekistan"),
        entry("65.5", "Uzbekistan"),
        entry("65.6", "Uzbekistan"),
        entry("65.7", "Uzbekistan"),
        entry("65.8", "Uzbekistan"),
        entry("65.9", "Turkmenistan"),
        entry("66.0", "Turkmenistan"),
        entry("66.1", "Turkmenistan"),
        entry("66.2", "Turkmenistan"),
        entry("66.3", "Turkmenistan"),
        entry("66.4", "Turkmenistan"),
        entry("66.5", "Uzbekistan"),
        entry("66.6", "Uzbekistan"),
        entry("66.7", "Turkmenistan"),
        entry("66.8", "Turkmenistan"),
        entry("66.9", "Turkmenistan"),
        entry("67.0", "Turkmenistan"),
        entry("67.1", "Afghanistan"),
        entry("67.2", "Afghanistan"),
        entry("67.3", "Afghanistan"),
        entry("67.4", "Afghanistan"),
        entry("67.5", "Afghanistan"),
        entry("67.6", "Afghanistan"),
        entry("67.7", "Afghanistan"),
        entry("67.8", "Afghanistan"),
        entry("67.9", "Afghanistan"),
        entry("68.0", "Afghanistan"),
        entry("68.1", "Afghanistan"),
        entry("68.2", "Afghanistan"),
        entry("68.3", "Afghanistan"),
        entry("68.4", "Afghanistan"),
        entry("68.5", "Afghanistan"),
        entry("68.6", "Afghanistan"),
        entry("68.7", "Afghanistan"),
        entry("68.8", "Afghanistan"),
        entry("68.9", "Afghanistan"),
        entry("69.0", "Afghanistan"),
        entry("69.1", "Afghanistan"),
        entry("69.2", "Afghanistan"),
        entry("69.3", "Afghanistan"),
        entry("69.4", "Afghanistan"),
        entry("69.5", "Turkmenistan"),
        entry("69.6", "Turkmenistan"),
        entry("69.7", "Turkmenistan"),
        entry("69.8", "Afghanistan"),
        entry("69.9", "Afghanistan"),
        entry("70.0", "Afghanistan"),
        entry("70.1", "Afghanistan"),
        entry("70.2", "Afghanistan"),
        entry("70.3", "Iran"),
        entry("70.4", "Iran"),
        entry("70.5", "Iran"),
        entry("70.6", "Iran"),
        entry("70.7", "Iran"),
        entry("70.8", "Iran"),
        entry("70.9", "Iran"),
        entry("71.0", "Iran"),
        entry("71.1", "Iran"),
        entry("71.2", "Iran"),
        entry("71.3", "Iran"),
        entry("71.4", "Iran"),
        entry("71.5", "Iran"),
        entry("71.6", "Iran"),
        entry("71.7", "Iran"),
        entry("71.8", "Iran"),
        entry("71.9", "Iran"),
        entry("72.0", "Iran"),
        entry("72.1", "Iran"),
        entry("72.2", "Iran"),
        entry("72.3", "Iran"),
        entry("72.4", "Iran"),
        entry("72.5", "Iran"),
        entry("72.6", "Iran"),
        entry("72.7", "Iran"),
        entry("72.8", "Iran"),
        entry("72.9", "Iran"),
        entry("73.0", "Iran"),
        entry("73.1", "Iran"),
        entry("73.2", "Iran"),
        entry("73.3", "Iran"),
        entry("73.4", "Iran"),
        entry("73.5", "Iran"),
        entry("73.6", "Iran"),
        entry("73.7", "Iran"),
        entry("73.8", "Iran"),
        entry("73.9", "Iran"),
        entry("74.0", "Pakistan"),
        entry("74.1", "Pakistan"),
        entry("74.2", "Pakistan"),
        entry("74.3", "Pakistan"),
        entry("74.4", "Pakistan"),
        entry("74.5", "Pakistan"),
        entry("74.6", "Pakistan"),
        entry("74.7", "Pakistan"),
        entry("74.8", "Pakistan"),
        entry("74.9", "Pakistan"),
        entry("75.0", "Pakistan"),
        entry("75.1", "Pakistan"),
        entry("75.2", "Iran"),
        entry("75.3", "Iran"),
        entry("75.4", "Pakistan"),
        entry("75.5", "Iran"),
        entry("75.6", "Iran"),
        entry("75.7", "Iran"),
        entry("75.8", "Pakistan"),
        entry("75.9", "Pakistan"),
        entry("76.0", "Pakistan"),
        entry("76.1", "Pakistan"),
        entry("76.2", "Pakistan"),
        entry("76.3", "Pakistan"),
        entry("76.4", "Pakistan"),
        entry("76.5", "the Indian Ocean"),
        entry("76.6", "the Indian Ocean"),
        entry("76.7", "the Indian Ocean"),
        entry("76.8", "the Indian Ocean"),
        entry("76.9", "the Indian Ocean"),
        entry("77.0", "Iran"),
        entry("77.1", "Iran"),
        entry("77.2", "Iran"),
        entry("77.3", "Iran"),
        entry("77.4", "the Indian Ocean"),
        entry("77.5", "the Indian Ocean"),
        entry("77.6", "the Indian Ocean"),
        entry("77.7", "the Indian Ocean"),
        entry("77.8", "the Indian Ocean"),
        entry("77.9", "the Indian Ocean"),
        entry("78.0", "the Indian Ocean"),
        entry("78.1", "the Indian Ocean"),
        entry("78.2", "the Indian Ocean"),
        entry("78.3", "the Indian Ocean"),
        entry("78.4", "the Indian Ocean"),
        entry("78.5", "the Indian Ocean"),
        entry("78.6", "the Indian Ocean"),
        entry("78.7", "the Indian Ocean"),
        entry("78.8", "the Indian Ocean"),
        entry("78.9", "the Indian Ocean"),
        entry("79.0", "the Indian Ocean"),
        entry("79.1", "the Indian Ocean"),
        entry("79.2", "the Indian Ocean"),
        entry("79.3", "the Indian Ocean"),
        entry("79.4", "the Indian Ocean"),
        entry("79.5", "the Indian Ocean"),
        entry("79.6", "the Indian Ocean"),
        entry("79.7", "the Indian Ocean"),
        entry("79.8", "the Indian Ocean"),
        entry("79.9", "the Indian Ocean"),
        entry("80.0", "the Indian Ocean"),
        entry("80.1", "the Indian Ocean"),
        entry("80.2", "the Indian Ocean"),
        entry("80.3", "the Indian Ocean"),
        entry("80.4", "the Indian Ocean"),
        entry("80.5", "the Indian Ocean"),
        entry("80.6", "the Indian Ocean"),
        entry("80.7", "the Indian Ocean"),
        entry("80.8", "the Indian Ocean"),
        entry("80.9", "the Indian Ocean"),
        entry("81.0", "the Indian Ocean"),
        entry("81.1", "the Indian Ocean"),
        entry("81.2", "the Indian Ocean"),
        entry("81.3", "the Indian Ocean"),
        entry("81.4", "the Indian Ocean"),
        entry("81.5", "the Indian Ocean"),
        entry("81.6", "the Indian Ocean"),
        entry("81.7", "the Indian Ocean"),
        entry("81.8", "the Indian Ocean"),
        entry("81.9", "the Indian Ocean"),
        entry("82.0", "the Indian Ocean"),
        entry("82.1", "the Indian Ocean"),
        entry("82.2", "Pakistan"),
        entry("82.3", "the Indian Ocean"),
        entry("82.4", "Pakistan"),
        entry("82.5", "Pakistan"),
        entry("82.6", "Pakistan"),
        entry("82.7", "Pakistan"),
        entry("82.8", "Pakistan"),
        entry("82.9", "Pakistan"),
        entry("83.0", "Pakistan"),
        entry("83.1", "Pakistan"),
        entry("83.2", "Pakistan"),
        entry("83.3", "Pakistan"),
        entry("83.4", "Pakistan"),
        entry("83.5", "Pakistan"),
        entry("83.6", "Pakistan"),
        entry("83.7", "Pakistan"),
        entry("83.8", "Pakistan"),
        entry("83.9", "Pakistan"),
        entry("84.0", "Iran"),
        entry("84.1", "Iran"),
        entry("84.2", "Pakistan"),
        entry("84.3", "Iran"),
        entry("84.4", "Pakistan"),
        entry("84.5", "Iran"),
        entry("84.6", "Iran"),
        entry("84.7", "Iran"),
        entry("84.8", "Iran"),
        entry("84.9", "Iran"),
        entry("85.0", "Iran"),
        entry("85.1", "Iran"),
        entry("85.2", "Iran"),
        entry("85.3", "Iran"),
        entry("85.4", "Iran"),
        entry("85.5", "Iran"),
        entry("85.6", "Iran"),
        entry("85.7", "Iran"),
        entry("85.8", "the Indian Ocean"),
        entry("85.9", "Oman"),
        entry("86.0", "the Indian Ocean"),
        entry("86.1", "the Indian Ocean"),
        entry("86.2", "Russia"),
        entry("86.3", "Russia"),
        entry("86.4", "Russia"),
        entry("86.5", "Russia"),
        entry("86.6", "Russia"),
        entry("86.7", "Russia"),
        entry("86.8", "Russia"),
        entry("86.9", "Russia"),
        entry("87.0", "Russia"),
        entry("87.1", "Russia"),
        entry("87.2", "Russia"),
        entry("87.3", "Russia"),
        entry("87.4", "Russia"),
        entry("87.5", "Russia"),
        entry("87.6", "Russia"),
        entry("87.7", "Russia"),
        entry("87.8", "Russia"),
        entry("87.9", "Russia"),
        entry("88.0", "Russia"),
        entry("88.1", "Russia"),
        entry("88.2", "Russia"),
        entry("88.3", "Russia"),
        entry("88.4", "Russia"),
        entry("88.5", "Russia"),
        entry("88.6", "Russia"),
        entry("88.7", "Russia"),
        entry("88.8", "Russia"),
        entry("88.9", "Russia"),
        entry("89.0", "Russia"),
        entry("89.1", "Russia"),
        entry("89.2", "Russia"),
        entry("89.3", "Russia"),
        entry("89.4", "Russia"),
        entry("89.5", "the Atlantic Ocean"),
        entry("89.6", "the Atlantic Ocean"),
        entry("89.7", "Denmark"),
        entry("89.8", "the Atlantic Ocean"),
        entry("89.9", "Sweden"),
        entry("90.0", "Sweden"),
        entry("90.1", "Sweden"),
        entry("90.2", "Sweden"),
        entry("90.3", "Sweden"),
        entry("90.4", "Sweden"),
        entry("90.5", "Sweden"),
        entry("90.6", "Sweden"),
        entry("90.7", "Sweden"),
        entry("90.8", "Sweden"),
        entry("90.9", "Sweden"),
        entry("91.0", "Sweden"),
        entry("91.1", "Sweden"),
        entry("91.2", "Germany"),
        entry("91.3", "Germany"),
        entry("91.4", "Germany"),
        entry("91.5", "Germany"),
        entry("91.6", "Germany"),
        entry("91.7", "Germany"),
        entry("91.8", "Germany"),
        entry("91.9", "Germany"),
        entry("92.0", "Germany"),
        entry("92.1", "Germany"),
        entry("92.2", "Germany"),
        entry("92.3", "Switzerland"),
        entry("92.4", "Switzerland"),
        entry("92.5", "France"),
        entry("92.6", "Germany"),
        entry("92.7", "Germany"),
        entry("92.8", "Czechia"),
        entry("92.9", "Czechia"),
        entry("93.0", "Czechia"),
        entry("93.1", "Czechia"),
        entry("93.2", "Germany"),
        entry("93.3", "Germany"),
        entry("93.4", "the Arctic Ocean"),
        entry("93.5", "the Arctic Ocean"),
        entry("93.6", "the Arctic Ocean"),
        entry("93.7", "the Arctic Ocean"),
        entry("93.8", "the Arctic Ocean"),
        entry("93.9", "the Arctic Ocean"),
        entry("94.0", "the Arctic Ocean"),
        entry("94.1", "the Arctic Ocean"),
        entry("94.2", "Russia"),
        entry("94.3", "Russia"),
        entry("94.4", "Russia"),
        entry("94.5", "Russia"),
        entry("94.6", "Russia"),
        entry("94.7", "Russia"),
        entry("94.8", "Russia"),
        entry("94.9", "Russia"),
        entry("95.0", "Russia"),
        entry("95.1", "Russia"),
        entry("95.2", "Russia"),
        entry("95.3", "Russia"),
        entry("95.4", "Russia"),
        entry("95.5", "Poland"),
        entry("95.6", "Poland"),
        entry("95.7", "Slovakia"),
        entry("95.8", "Poland"),
        entry("95.9", "Poland"),
        entry("96.0", "Poland"),
        entry("96.1", "Ukraine"),
        entry("96.2", "Ukraine"),
        entry("96.3", "Ukraine"),
        entry("96.4", "Poland"),
        entry("96.5", "Ukraine"),
        entry("96.6", "Ukraine"),
        entry("96.7", "Poland"),
        entry("96.8", "Ukraine"),
        entry("96.9", "Hungary"),
        entry("97.0", "Serbia"),
        entry("97.1", "Montenegro"),
        entry("97.2", "Montenegro"),
        entry("97.3", "Montenegro"),
        entry("97.4", "Montenegro"),
        entry("97.5", "the Atlantic Ocean"),
        entry("97.6", "the Atlantic Ocean"),
        entry("97.7", "the Atlantic Ocean"),
        entry("97.8", "the Atlantic Ocean"),
        entry("97.9", "the Atlantic Ocean"),
        entry("98.0", "the Atlantic Ocean"),
        entry("98.1", "the Atlantic Ocean"),
        entry("98.2", "the Atlantic Ocean"),
        entry("98.3", "the Atlantic Ocean"),
        entry("98.4", "the Atlantic Ocean"),
        entry("98.5", "the Atlantic Ocean"),
        entry("98.6", "the Atlantic Ocean"),
        entry("98.7", "the Atlantic Ocean"),
        entry("98.8", "the Atlantic Ocean"),
        entry("98.9", "Libya"),
        entry("99.0", "Libya"),
        entry("99.1", "Libya"),
        entry("99.2", "Libya"),
        entry("99.3", "Libya"),
        entry("99.4", "Libya"),
        entry("99.5", "Denmark"),
        entry("99.6", "Egypt"),
        entry("99.7", "the Indian Ocean"),
        entry("99.8", "Saudi Arabia"),
        entry("99.9", "Saudi Arabia"),
        entry("100.0", "Canada")
    );

    // TODO: Spec
    private static void manipulateImage(String inputImageFileName, String outputImageFilename) {
        BufferedImage image;
        try {
            image = ImageIO.read(new File(inputImageFileName));
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }
        image = process(image);
        // TODO: Do something better for this case
        if (image == null) {
            System.out.println("image was null, nothing written.");
            return;
        }
        try {
            ImageIO.write(image, "png", new File(outputImageFilename));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // TODO: Spec
    private static BufferedImage process(BufferedImage old) {
        // Placeholder values for now
        long population = -1;
        double lat = -1;
        double lon = -1;
        int radius = -1;
        boolean populationAndRadiusInitialized = false;
        final String foundPercentCirclesFilename = 
            "/home/alexmijo/PopulationCircles/foundPercentageCircles2020.txt";
        // TODO: Modularize into a function
        try(BufferedReader br = new BufferedReader(new FileReader(foundPercentCirclesFilename))) {
            String line = br.readLine();
            while (line != null) {
                String[] foundPercentCircle = line.split(" ");
                if (Math.abs(Double.parseDouble(foundPercentCircle[0]) 
                    - Double.parseDouble(percent)) < 0.0001) {
                    population = (long)Double.parseDouble(foundPercentCircle[4]);
                    lat = Double.parseDouble(foundPercentCircle[3]);
                    lon = Double.parseDouble(foundPercentCircle[2]);
                    radius = Integer.parseInt(foundPercentCircle[1]);
                    populationAndRadiusInitialized = true;
                    break;
                }
                line = br.readLine();
            }
        // TODO: Something better when an exception happens, probably
        } catch (FileNotFoundException e) {
            e.printStackTrace();
            return null;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
        if (!populationAndRadiusInitialized) {
            System.out.println(
                "Desired percentage circle wasn't in " + foundPercentCirclesFilename);
            return null;
        }
        int bigFontHeight = 120;
        int smallFontHeight = 60;
        int verySmallFontHeight = 59;
        int veryVerySmallFontHeight = 35;
        double lineSpacing = 1.3;
        int width = old.getWidth();
        int height = old.getHeight() + (int)(bigFontHeight * lineSpacing) 
                     + (int)(veryVerySmallFontHeight * lineSpacing);
        BufferedImage img = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = img.createGraphics();
        g2d.setColor(Color.BLACK);
        g2d.fillRect(0, 0, width, height);
        g2d.setPaint(Color.WHITE);
        g2d.setFont(new Font("Serif", Font.BOLD, bigFontHeight));
        NumberFormat commasFormat = NumberFormat.getInstance();
        commasFormat.setGroupingUsed(true); // this will also round numbers, 3 decimal places
        String title = "The smallest possible circle containing " + percent
                       + "% of the world's population";
        String populationString = commasFormat.format(population) + " people";
        String radiusString = "Radius: " + commasFormat.format(radius) +" km";
        // ImageObserver not needed
        g2d.drawImage(old, 0, height - old.getHeight() 
                      - (int)(veryVerySmallFontHeight * lineSpacing), null);
        g2d.drawString(title, 5, bigFontHeight);
        g2d.setFont(new Font("Serif", Font.BOLD, smallFontHeight));
        g2d.drawString(populationString, 5, smallFontHeight + (int)(bigFontHeight * lineSpacing));
        g2d.drawString(radiusString, 5, smallFontHeight + (int)(smallFontHeight * lineSpacing)
                       + (int)(bigFontHeight * lineSpacing));
        
        g2d.setFont(new Font("Serif", Font.BOLD, verySmallFontHeight));
        int countryY = height - (int)(verySmallFontHeight * (lineSpacing - 1)) - 3;
        String centerString = "Center:";
        DecimalFormat latLonFormatter = new DecimalFormat("#0.000");
        String centerCoords = "(" + latLonFormatter.format(lat) + "°N, " 
                              + latLonFormatter.format(lon) + "°E)";
        if (lon < 0) {
            centerCoords = "(" + latLonFormatter.format(lat) + "°N, " 
                           + latLonFormatter.format(-lon) + "°W)";
        }
        String country = "in " + countries.get(percent);
        g2d.drawString(country, 5, countryY);
        g2d.drawString(centerCoords, 5, countryY - (int)(verySmallFontHeight * lineSpacing));
        g2d.drawString(centerString, 5, countryY - (int)(verySmallFontHeight * lineSpacing) 
                       - (int)(verySmallFontHeight * lineSpacing));
        
        g2d.setFont(new Font("Serif", Font.BOLD, veryVerySmallFontHeight));
        g2d.setPaint(Color.WHITE);
        FontMetrics fm = g2d.getFontMetrics();
        String dataSourceString = 
            "https://sedac.ciesin.columbia.edu/data/set/gpw-v4-population-count-adjusted-to-2015-unwpp-country-totals-rev11";
        int dataSourceX = width - fm.stringWidth(dataSourceString) - 5;
        int dataSourceY = height - (int)(veryVerySmallFontHeight * (lineSpacing - 1)) - 3;
        g2d.drawString(dataSourceString, dataSourceX, dataSourceY);
        String dataResolutionString = "30 arcsecond resolution";
        int dataResolutionX = width - fm.stringWidth(dataResolutionString) - 5;
        int dataResolutionY = dataSourceY - (int)(veryVerySmallFontHeight * lineSpacing);
        g2d.drawString(dataResolutionString, dataResolutionX, dataResolutionY);
        // g2d.drawString(dataResolutionString, dataResolutionX, dataSourceY);
        String dataYearString = "2020 population data";
        int dataYearX = width - fm.stringWidth(dataYearString) - 5;
        int dataYearY = dataResolutionY - (int)(veryVerySmallFontHeight * lineSpacing);
        g2d.drawString(dataYearString, dataYearX, dataYearY);
        // g2d.drawString(dataYearString, dataYearX, dataResolutionY);
        g2d.dispose();
        return img;
    }

    public static void main(String[] args) {
        for (circleNum = 1; circleNum <= 1000; circleNum++) {
            percent = (circleNum / 10) + "." + (circleNum % 10);
            String inputImageFileName =
                "/mnt/d/PopCirclesStuff/linuxPythonMadePercentMaps2020/reprojected/pngs/" + circleNum 
                + ".png";
            String outputImageFileName;
            if (circleNum < 10) {
                outputImageFileName =
                    "/mnt/d/PopCirclesStuff/linuxPythonMadePercentMaps2020/WithText/000" + circleNum 
                    + ".png";
            } else if (circleNum < 100) {
                outputImageFileName =
                    "/mnt/d/PopCirclesStuff/linuxPythonMadePercentMaps2020/WithText/00" + circleNum 
                    + ".png";
            } else if (circleNum < 1000) {
                outputImageFileName =
                    "/mnt/d/PopCirclesStuff/linuxPythonMadePercentMaps2020/WithText/0" + circleNum 
                    + ".png";
            } else {
                outputImageFileName =
                    "/mnt/d/PopCirclesStuff/linuxPythonMadePercentMaps2020/WithText/" + circleNum 
                    + ".png";
            }
            manipulateImage(inputImageFileName, outputImageFileName);
        }
    }
}